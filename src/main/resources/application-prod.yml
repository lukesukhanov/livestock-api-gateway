server:
  port: ${SERVER_PORT}

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: authorization-server-login
          uri: lb://authorization-server
          predicates:
            - Path=/login
            - Method=POST
        - id: authorization-server-users
          uri: lb://authorization-server
          predicates:
            - Path=/users
            - Method=POST
        - id: authorization-server-oauth2-authorize
          uri: lb://authorization-server
          predicates:
            - Path=/oauth2/authorize
            - Method=GET
        - id: authorization-server-oauth2-token
          uri: lb://authorization-server
          predicates:
            - Path=/oauth2/token
            - Method=POST
        - id: product-service-categories
          uri: lb://product-service
          predicates:
            - Path=/categories
            - Method=GET
        - id: product-service-products
          uri: lb://product-service
          predicates:
            - Path=/products
            - Method=GET
        - id: product-service-product-images
          uri: lb://product-service
          predicates:
            - Path=/productImages, /productImages/{id}
            - Method=GET
        - id: cart-service
          uri: lb://cart-service
          predicates:
            - Path=/productsInCart, /productsInCart/{productId}
            - Method=GET, POST, DELETE
eureka:
  instance:
    instanceId: ${spring.application.name}:${random.value}
  client:
    serviceUrl:
      defaultZone: ${DISCOVERY_SERVERS}
    healthcheck:
      enabled: true

logging:
  config: classpath:logback-prod.xml

management:
  endpoints:
    web:
      exposure:
        include: info, health
  endpoint:
    info:
      app:
        name: ${spring.application.name}
        version: 1.0
    health:
      show-details: always
app:
  security:
    cors-origins: ${CORS_ORIGINS}